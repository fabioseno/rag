services:
  db:
    image: pgvector/pgvector:pg17 # PostgreSQL with pgvector support
    container_name: pgvector-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: vector_db
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres/schema.sql:/docker-entrypoint-initdb.d/schema.sql

  ollama:
    image: ollama/ollama
    container_name: ollama
    restart: unless-stopped
    environment:
      - OLLAMA_HOST=0.0.0.0
    volumes:
      - ./ollama-data:/root/.ollama # Shared volume for models
    ports:
      - "11434:11434"

  ollama-model-loader:
    image: docker:latest # 🔥 Uses Docker CLI instead of Ollama
    container_name: ollama-model-loader
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # 🔥 Allows running commands inside containers
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        echo "⏳ Waiting for Ollama to be ready..."
        until docker exec ollama ollama list >/dev/null 2>&1; do
            sleep 2
        done
        echo "📥 Pulling models inside Ollama container..."
        docker exec ollama ollama pull nomic-embed-text
        docker exec ollama ollama pull tinyllama
        # docker exec ollama ollama pull llama3.2:3b
        # docker exec ollama ollama pull gemma:7b
        # docker exec ollama ollama pull mistral:7b
        # docker exec ollama ollama pull phi3:3.8b

        echo "✅ Models downloaded. Exiting..."
    restart: "no"

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    restart: always
    depends_on:
      - ollama
    environment:
      - OLLAMA_BASE_URLS=http://0.0.0.0:11434 #comma separated ollama hosts
    ports:
      - "8080:8080" # Exposing Open WebUI
    # volumes:
    # - open-webui:/app/backend/data
    # - open-webui:/app/backend/data # Persisting WebUI data
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"

volumes:
  pgdata:
